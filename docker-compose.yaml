services:
  redis:
    build:
      context: ./redis
    ports:
      - "6379"
    networks:
      - node-network

  db:
    build:
      context: ./db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=events
      - POSTGRES_MAX_CONNECTIONS=500
    ports:
      - "5432:5432"
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
    networks:
      - node-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d events || exit 1" ]
      interval: 3s
      timeout: 3s
      retries: 5

  node:
    build:
      context: ./node
    deploy:
      replicas: 5
      endpoint_mode: dnsrr
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=events
    ports:
      - "8080"
    networks:
        - node-network
    depends_on:
      db:
        condition: service_healthy # Wait for `db` healthcheck to pass
      redis:
        condition: service_started


  nginx:
    build:
      context: ./reverse-proxy
    ports:
      - "4000:443"
    depends_on:
      - node
    networks:
      - node-network

networks:
  node-network:
    driver: bridge